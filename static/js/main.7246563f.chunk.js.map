{"version":3,"sources":["components/Counter/Counter.js","App.js","index.js"],"names":["Counter","count","addOne","add100","increase","className","type","onClick","App","state","setState","prevState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gOAKMA,G,MAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,SAA1B,OACd,yBAAKC,UAAU,WACb,yCAEGJ,GAEH,4BACEK,KAAK,SACLD,UAAU,kBACVE,QAASL,GAHX,WAQA,4BACEI,KAAK,SACLD,UAAU,kBACVE,QAASJ,GAHX,WAQA,4BACEG,KAAK,SACLD,UAAU,kBACVE,QAASH,GAHX,eCWWI,G,kNAjCbC,MAAQ,CACNR,MAAO,G,EAGTC,OAAS,WACP,EAAKQ,UAAS,SAAAC,GAAS,MAAK,CAC1BV,MAAOU,EAAUV,MAAQ,O,EAI7BE,OAAS,WACP,EAAKO,UAAS,SAAAC,GAAS,MAAK,CAC1BV,MAAOU,EAAUV,MAAQ,S,EAI7BG,SAAW,WACT,EAAKK,MAAMR,MAAQ,IAAM,GAAK,EAAKE,SACnC,EAAKD,U,uDAIL,OACE,kBAAC,EAAD,CACED,MAAOW,KAAKH,MAAMR,MAClBC,OAAQU,KAAKV,OACbC,OAAQS,KAAKT,OACbC,SAAUQ,KAAKR,e,GA5BLS,IAAMC,YCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7246563f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './counter.scss';\n\nconst Counter = ({ count, addOne, add100, increase }) => (\n  <div className=\"counter\">\n    <h1>\n      Count:&nbsp;\n      {count}\n    </h1>\n    <button\n      type=\"button\"\n      className=\"counter__button\"\n      onClick={addOne}\n    >\n      Add one\n    </button>\n\n    <button\n      type=\"button\"\n      className=\"counter__button\"\n      onClick={add100}\n    >\n      Add 100\n    </button>\n\n    <button\n      type=\"button\"\n      className=\"counter__button\"\n      onClick={increase}\n    >\n      Increase\n    </button>\n  </div>\n);\n\nCounter.propTypes = {\n  count: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n\nexport { Counter };\n","import React from 'react';\nimport { Counter } from './components/Counter';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 100,\n    }));\n  };\n\n  increase = () => {\n    this.state.count % 5 === 0 && this.add100();\n    this.addOne();\n  };\n\n  render() {\n    return (\n      <Counter\n        count={this.state.count}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}